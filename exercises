//mistrypinakin

// Given 2 or more unsorted arrays, find the elements common to all of them.
// eg:

var a = [1, 3, 2, 5, 3, 7, 3, 5, 9, 0],
    b = [2, 4, 7, 5, 1, 2, 8],
    c = [5, 3, 7, 6];

// Result is [5, 7]

var a = [0, 1, 2],
    b = [3, 4, 1],
    c = [4, 1],
    d = [8, 1, 9];
    
// Result is [1]

function findCommonBetweenArrays() {
   return Array.prototype.reduce.call(arguments, function(current, next) {
        var common = [];
        current.forEach(function(element) {
            if(next.indexOf(element) > -1 && common.indexOf(element) == -1) {
                common.push(element);
            }
        });
        return common;
    });
}





// Given an object, find all "falsy" property values
// eg:

var data = {
    title: "The Thing",
    authorId: 4488,
    publishDate: undefined,
    meta: {
        type: "script",
        refId: null
    },
    sigma: [
        {
            name: ["temporal"],
            value: 0
        }, {
            name: "variational",
            value: 1
        }
    ]
};

data.meta.circular = data.meta

// Result
//publishDate: undefined
//refId: null
//value: 0

Take care of circular references like sigma: data as a property in data object

function findFalsy(data) {
    for(var property in data) {
        //console.log(property, typeof data[property])
        if(typeof data[property] === 'object' && data[property] != data) {
            findFalsy(data[property]);
        }
        if(data.hasOwnProperty(property)) {
            if(!data[property]) {
                console.log(property, data[property]);    
            }
            
        }
    }
}


http://stackoverflow.com/questions/11777890/equivalence-of-window-onbeforeunload-in-angularjs-for-routes